(setq null nil)
(setq null? nil?)
(setq eq? equal?)
(setq pair? list?)
(setq write print)

(print
( (lambda (exp)
        ((lambda (exp1)
            ((lambda (fn)
                (if (pair? fn)
                    (write (quote (cons fn (cdr exp1))))
                    ((lambda (args)
                        ((lambda (evlist)
                            (write (cons fn (evlist evlist args null))))
                        (lambda (evlist^ e1 evargs)
                            (if (null? e1)
                                null
                                (cons (car e1)
                                      (evlist^ evlist^ (cdr e1) evargs))))))
                    (cdr exp1))))
                (car exp1)))
              (if (eq? (car exp) (quote apply))
                (cdr exp)
                exp)))

    (quote (apply fn (1 2 3 4)))
)
)
